.. include:: ../module.txt

.. _section-cloud-native-api-gateway-and-lambda-label:

AWSで作るクラウドネイティブアプリケーションの基本
========================================================================================

第2回 AWS ECS上に構築するSpringアプリケーション
----------------------------------------------------------------------------------------

|br|

クラウド時代が到来し、ますます広がりを見せつつあるコンテナ技術。第2回はAWS ECS上でSpringアプリケーションを構築する方法を説明します。
本稿は以下の前提知識がある開発者を想定しています。

|br|

.. list-table::
   :widths: 3, 7

   * - 対象読者
     - 前提知識

   * - エンタープライズ開発者
     - Java言語及びSpringFrameworkを使った開発に従事したことがある経験者。経験がなければ、|br|
       `こちらのチュートリアル <http://terasolunaorg.github.io/guideline/5.4.1.RELEASE/ja/Tutorial/index.html>`_ を実施することを推奨します。TERASOLUNAはSpringのベストプラクティスをまとめた開発方法論で、このチュートリアルでは、JavaやSpring Frameworkを使った開発に必要な最低限の知識を得ることができます。

   * -
     - GitHubなどのバージョン管理ツールやApache Mavenなどのライブラリ管理ツールを使った開発に従事したことがある経験者。

   * - AWS開発経験者
     - AWSアカウントをもち、コンソール上で各サービスを実行したことがある経験者

   * - コンテナ及びLinux経験者
     - Dockerなどのコンテナ技術を使用した経験がある、またはPOSIXコマンドによるUNIX、LINUX系OSを操作したことがある経験者。

|br|

また、動作環境は以下のバージョンで実施しています、将来的には、AWSコンソール上の画面イメージや操作、バージョンアップによりJavaのソースコード内で使用するクラスが異なる可能性があります。

|br|


.. list-table::
   :widths: 5, 5

   * - 動作対象
     - バージョン

   * - Java
     - 1.8

   * - Spring Boot
     - 2.1.2.RELEASE

   * - Docker
     - 2.1.2.RELEASE

   * - CentOS
     - 7.1

|br|


AWS ECSの概要
------------------------------------------------------------------

|br|

Amazon Elastic Container Service (Amazon ECS) は、クラスター単位でDockerコンテナを簡単にスケーラブルかつ高速に実行、停止、管理できるコンテナ管理サービスです。
単純にDockerコンテナを実行する場合と比較して、ECSではリージョン内の複数のアベイラビリティーゾーンを跨いでコンテナを実行できるため、可用性の高い運用が可能となっており
2019年1月現在時点では、ひとつまたは複数のEC2上にクラスタを構築し、その上に任意のレジストリにあるDockerイメージをデプロイするEC2起動型と、
実行するクラスタ自体をマネージドとしてAWSが自動で管理し、コンテナだけを意識するFargateに分類できます。本稿では理解を深めるために、EC2クラスタ型でECSアプリケーションを構築します。


|br|

ECSコンテナで実行されるSpringアプリケーションの実装
-------------------------------------------------------------------------------------------------------

|br|

ECSの実行環境はDockerコンテナなので、ECSで実行するSpringアプリケーションは、単純にLinuxベースのコンテナイメージの中で実行するアプリケーションをSpringBootを使って実装する方法が簡易です。
ただ、ECSを用いると、単にDockerをEC2上で実行する場合に比べて、アプリケーションのIPアドレスやポートの管理がAWSのマネージドになり、アプリケーション間のサービス連携・通信はALB(アプリケーションロードバランサー)を介して行う方がよいので
こうしたECSの特徴を理解して、アプリケーションを実装しておく必要があります。今回は以下のようなイメージでECSアプリケーションを実装する形式とします。


.. figure:: img/aws-ecs/ecs-architecture.png
   :scale: 100%

|br|

上記の図では、アプリケーションを２つの役割に分けて構築しています、１つがBackend For Frontend(BFF)アプリケーション、もうひとつが、Backend アプリケーションです。こうした構成に分けて構築するにはいくつか理由があります。

*

|br|

ECSクラスタの設定
-------------------------------------------------------------------------------------------------------

|br|

ECSタスクの設定
-------------------------------------------------------------------------------------------------------

|br|

ロードバランサーの設定
-------------------------------------------------------------------------------------------------------

|br|

ECSサービスの設定
-------------------------------------------------------------------------------------------------------
|br|

まとめ
------------------------------------------------------------------

|br|

著者紹介
------------------------------------------------------------------

川畑 光平(KAWABATA Kohei)

.. figure:: img/aws-lambda-and-api-gateway/pic_image01.jpg
   :scale: 100%

某システムインテグレータにて、金融機関システム業務アプリケーション開発・システム基盤担当を経て、現在はソフトウェア開発自動化関連の研究開発・推進に従事。

Red Hat Certified Engineer、Pivotal Certified Spring Professional、AWS Certified Solutions Architect Professional等の資格を持ち、アプリケーション基盤・クラウドなど様々な開発プロジェクト支援にも携わる。
